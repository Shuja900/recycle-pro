swagger: "2.0"
info:
  title: ChannelShipper & Royal Mail Public API
  description: Import your orders, retrieve your orders and generate labels.
  version: 1.0.0

basePath: /api/v1
produces: 
  - application/json
consumes:
  - application/json
paths:
  /version:
    get:
      tags:
        - Version
      summary: Get API version details.
      operationId: GetVersionAsync
      responses:
        '200':
          description: Returns details about the API version
          schema:
            $ref: '#/definitions/GetVersionResource'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /orders/{orderIdentifiers}:
    get:
      tags:
        - Orders
      summary: Retrieve orders
      operationId: GetOrdersAsync
      parameters:
        - $ref: '#/parameters/orderIdentifiers'
      responses:
        '200':
          description: Return information about the orders
          schema:
            type: array
            items:
              $ref: '#/definitions/GetOrderInfoResource'
        '400':
          description: Bad Request (Request has missing or invalid parameters and cannot be parsed)
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []

  /orders/{orderIdentifiers}/full:
    get:
      tags:
        - Orders
      summary: Retrieve orders details
      description: <b>Reserved for ChannelShipper accounts only</b>
      operationId: GetOrdersWithDetailsAsync
      parameters:
        - $ref: '#/parameters/orderIdentifiers'
      responses:
        '200':
          description: Return detailed information about the orders
          schema:
            type: array
            items:
              $ref: '#/definitions/GetOrderDetailsResource'
        '400':
          description: Bad Request (Request has missing or invalid parameters and cannot be parsed)
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden (Feature not available)
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []

  /orders:
    post:
      tags:
        - Orders
      summary: Create orders
      operationId: CreateOrdersAsync
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateOrdersRequest'
      responses:
        '200':
          description: Request Processed Successfully
          schema:
            $ref: '#/definitions/CreateOrdersResponse'
        '400':
          description: Bad Request (Request has missing or invalid parameters and cannot be parsed)
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []

  /orders/{orderIdentifiers}/label:
    get:
      tags:
        - Labels
      summary: Return a single PDF file with generated label and/or associated document(s)
      description: <b>Reserved for ChannelShipper accounts only</b></br></br>The account "Label format" settings page will control the page format settings used to print the postage label and associated documents.
      operationId: GetOrdersLabelAsync
      parameters:
        - $ref: '#/parameters/orderIdentifiers'
        - $ref: '#/parameters/documentType'
        - $ref: '#/parameters/includeReturnsLabel'
        - $ref: '#/parameters/includeCN'
      produces:
        - application/pdf
        - application/json
      responses:
        '200':
          description: Return the PDF file with labels
          schema:
            type: file
        '400':
          description: Bad Request (Request has missing or invalid parameters and cannot be parsed)
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden (Feature not available)
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []

parameters:

  orderIdentifiers:
    in: path
    name: orderIdentifiers
    required: true
    type: string
    description: Order Identifier or several Order Identifiers separated by semicolon
    
  includeCN:
    in: query
    name: includeCN
    required: false
    type: boolean
    description: Include CN22/CN23 with label. Optional parameter. If this parameter is used the setting will override the default account behaviour specified in the "Label format" setting "Generate customs declarations with orders"

  includeReturnsLabel:
    in: query
    name: includeReturnsLabel
    required: false
    type: boolean
    description: Include returns label. Required when documentType is set to 'postageLabel'
        
  documentType:
    in: query
    name: documentType
    required: true
    type: string
    enum:
      - postageLabel
      - despatchNote
      - CN22
      - CN23
    description: Document generation mode. When documentType is set to "postageLabel" the additional parameters below must be used. These additional parameters will be ignored when documentType is not set to "postageLabel"

definitions:

  GetVersionResource:
    required:
      - releaseDate
    type: object
    properties:
      commit:
        type: string
      build:
        type: string
      release:
        type: string
      releaseDate:
        type: string 
        format: date-time
  
  ErrorResponse:
    required:
      - code
      - message
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      details:
        type: string
  
  GetOrderInfoResource:
    required:
      - orderIdentifier
      - createdOn
    type: object
    properties:
      orderIdentifier:
        type: integer
      orderReference:
        type: string
      createdOn:
        type: string
        format: date-time
      orderDate:
        type: string
        format: date-time
      printedOn:
        type: string
        format: date-time
      manifestedOn:
        type: string
        format: date-time
      shippedOn:
        type: string
        format: date-time
      trackingNumber:
        type: string
  
  CreateOrdersRequest:
    required:
      - items
    type: object
    properties:
      items:
        minLength: 1
        type: array
        items:
          $ref: '#/definitions/CreateOrderRequest'

  CreateOrderRequest:
    required:
      - recipient
      - orderDate
      - subtotal
      - shippingCostCharged
      - total
    type: object
    properties:
      orderReference:
        maxLength: 40
        type: string
      recipient:
        $ref: '#/definitions/RecipientDetailsRequest'
      sender:
        $ref: '#/definitions/SenderDetailsRequest'
      billing:
        $ref: '#/definitions/BillingDetailsRequest'
      packages:
        minLength: 0
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/ShipmentPackageRequest'
      orderDate:
        format: date-time
        type: string
      plannedDespatchDate:
        format: date-time
        type: string
      specialInstructions:
        type: string
        maxLength: 500
      subtotal:
        type: number
      shippingCostCharged:
        type: number
      otherCosts:
        type: number
      total:
        type: number
      currencyCode:
        type: string
        maxLength: 3
      postageDetails:
        $ref: '#/definitions/PostageDetailsRequest'
      tags:
        type: array
        items:
          $ref: '#/definitions/TagRequest'
      label:
        $ref: '#/definitions/LabelGenerationRequest'

  LabelGenerationRequest:
    type: object
    description: <span class='desc response'>Reserved for ChannelShipper accounts only</span>
    required:
      -  includeLabelInResponse
    properties:
      includeLabelInResponse:
        type: boolean
      includeCN:
        type: boolean
      includeReturnsLabel:
        type: boolean

  TagRequest:
    type: object
    properties:
      key:
        type: string
        maxLength: 100
      value:
        type: string
        maxLength: 100

  RecipientDetailsRequest:
    type: object
    properties:
      address:
        $ref: '#/definitions/AddressRequest'
      phoneNumber:
        maxLength: 25
        type: string
      emailAddress:
        maxLength: 254
        type: string        
      addressBookReference:
        maxLength: 100
        type: string

  AddressRequest:
    required:
      - addressLine1
      - city
      - countryCode
    type: object
    properties:
      fullName:
        maxLength: 210
        type: string
      companyName:
        maxLength: 100
        type: string
      addressLine1:
        maxLength: 100
        type: string
      addressLine2:
        maxLength: 100
        type: string
      addressLine3:
        maxLength: 100
        type: string
      city:
        maxLength: 100
        type: string
      county:
        maxLength: 100
        type: string
      postcode:
        maxLength: 20
        type: string
      countryCode:
        maxLength: 3
        type: string

  BillingDetailsRequest:
    required:
      - address
    type: object
    properties:
      address:
        $ref: '#/definitions/AddressRequest'
      phoneNumber:
        maxLength: 25
        type: string
      emailAddress:
        maxLength: 254
        type: string

  SenderDetailsRequest:
    type: object
    properties:
      tradingName:
        type: string
        maxLength: 250
      phoneNumber:
        maxLength: 25
        type: string
      emailAddress:
        maxLength: 254
        type: string

  ShipmentPackageRequest:
    required:
      - weightInGrams
      - packageFormatIdentifier
    type: object
    properties:
      weightInGrams:
        format: int32
        maximum: 30000
        minimum: 1
        type: integer
      packageFormatIdentifier:
        type: string
        description: <b>Value 'custom' is reserved for ChannelShipper accounts only</b>
        enum:
          - undefined
          - letter
          - largeLetter
          - smallParcel
          - mediumParcel
          - parcel
          - documents
          - custom
      customPackageFormatIdentifier:
        type: string
        description: Is required if 'packageFormatIdentifier' is provided as 'custom'. <b>Reserved for ChannelShipper accounts only</b>.
      dimensions:
        $ref: '#/definitions/DimensionsRequest'
      contents:
        minLength: 0
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/ProductItemRequest'

  PostageDetailsRequest:
    type: object
    properties:
      sendNotificationsTo:
        type: string
        enum:
          - sender
          - recipient
          - billing
      serviceCode:
        type: string
        maxLength: 10
      serviceRegisterCode:
        type: string
        maxLength: 2
      consequentialLoss:
        type: integer
        format: int32
        minimum: 0
        maximum: 10000
      receiveEmailNotification:
        type: boolean
      receiveSmsNotification:
        type: boolean
      guaranteedSaturdayDelivery:
        type: boolean
      requestSignatureUponDelivery:
        type: boolean
      isLocalCollect:
        type: boolean
      isDeliveryDutyPaid:
        type: boolean
      safePlace:
        type: string
        maxLength: 90
      department:
        type: string
        maxLength: 150
      AIRNumber:
        type: string
        maxLength: 50
      requiresExportLicense:
        type: boolean
      commercialInvoiceNumber:
        type: string
        maxLength:  35
      commercialInvoiceDate:
        type: string
        format: date-time

  ProductItemRequest:
    required:
      - quantity
      - unitValue
      - unitWeightInGrams
    type: object
    properties:
      name:
        type: string
        maxLength: 800
      SKU:
        type: string
        maxLength: 100
      quantity:
        format: int32
        type: integer
        minimum: 1
        maximum: 999999
      unitValue:
        type: number
        minimum: 0
        maximum: 999999
      unitWeightInGrams:
        type: number        
        minimum: 0
        maximum: 999999
      customsDescription:
        type: string
        maxLength: 50
      extendedCustomsDescription:
        type: string
        maxLength: 300
      customsCode:
        type: string
        maxLength: 10
      originCountryCode:
        type: string
        maxLength: 3
      customsDeclarationCategory:
        type: string
        enum:
          - none
          - gift
          - commercialSample
          - documents
          - other
          - returnedGoods
          - saleOfGoods
          - mixedContent
      requiresExportLicence:
          type: boolean

  DimensionsRequest:
    type: object
    description: It is not mandatory to include the dimensions field. If the dimensions field is included then the inner fields heightInMms, widthInMms and depthInMms must be specified with non-zero values.
    required:
      - heightInMms
      - widthInMms
      - depthInMms
    properties:
      heightInMms:
        type: integer
        format: int32
      widthInMms:
        type: integer
        format: int32
      depthInMms:
        type: integer
        format: int32

  #The response model (POST create orders)
  CreateOrdersResponse:
    type: object
    properties:
      successCount:
        type: integer
      errorsCount:
        type: integer
      createdOrders:
        type: array
        items:
          $ref: '#/definitions/CreateOrderResponse'
      failedOrders:
        type: array
        items:
          $ref: '#/definitions/FailedOrderResponse'

  #Successfull order creation result model
  CreateOrderResponse:
    required:
      - orderIdentifier
      - createdOn
    type: object
    properties:
      orderIdentifier:
        type: integer
      orderReference:
        type: string
      createdOn:
        type: string
        format: date-time
      orderDate:
        type: string
        format: date-time
      printedOn:
        type: string
        format: date-time
      manifestedOn:
        type: string
        format: date-time
      shippedOn:
        type: string
        format: date-time
      trackingNumber:
        type: string
      label:
        type: string
        description: "label in format base64 string"

  #Failed order creation result model
  FailedOrderResponse:
    type: object
    properties:
      order:
        $ref: '#/definitions/CreateOrderRequest'
      errors:
        type: array
        items:
          $ref: '#/definitions/CreateOrderErrorResponse'

  CreateOrderErrorResponse:
    type: object
    properties:
      errorCode:
        type: integer
      errorMessage:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/OrderFieldResponse'
        
  OrderFieldResponse:
    type: object
    properties:
      fieldName:
        type: string
      value:
        type: string

  GetOrderDetailsResource:
    required:
        - subtotal
        - shippingCostCharged
        - orderDiscount
        - total
        - weightInGrams
        - shippingDetails
        - shippingInfo
        - billingInfo
        - orderLines
    type: object
    properties:
      orderIdentifier:
        type: integer
      orderStatus:
        type: string
      createdOn:
        type: string
        format: date-time
      printedOn:
        type: string
        format: date-time
      shippedOn:
        type: string
        format: date-time
      postageAppliedOn:
        type: string
        format: date-time
      manifestedOn:
        type: string
        format: date-time
      orderDate:
        type: string
        format: date-time
      despatchedByOtherCourierOn:
        type: string
        format: date-time
      tradingName:
        type: string
      channel:
        type: string
      marketplaceTypeName:
        type: string
      department:
        type: string
      AIRNumber:
        type: string
      requiresExportLicense:
        type: boolean
      commercialInvoiceNumber:
        type: string
      commercialInvoiceDate:
        type: string
        format: date-time
      orderReference:
        type: string
      channelShippingMethod:
        type: string
      specialInstructions:
        type: string
      pickerSpecialInstructions:
        type: string
      subtotal:
        type: number
      shippingCostCharged:
        type: number
      orderDiscount:
        type: number
      total:
        type: number
      weightInGrams:
        type: integer
      packageSize:
        type: string
      accountBatchNumber:
        type: string
      currencyCode:
        type: string
        maxLength: 3
      shippingDetails:
        $ref: '#/definitions/GetShippingDetailsResult'
      shippingInfo:
        $ref: '#/definitions/GetPostalDetailsResult'
      billingInfo:
        $ref: '#/definitions/GetPostalDetailsResult'
      orderLines:
        type: array
        items: 
          $ref: '#/definitions/GetOrderLineResult'
      tags:
        type: array
        items:
          $ref: '#/definitions/GetTagDetailsResult'

  GetShippingDetailsResult:
    required:
        - shippingCost
    type: object
    properties:
      shippingCost:
        type: number
      trackingNumber:
        type: string
      shippingTrackingStatus:
        type: string
      serviceCode:
        type: string
      deliveryService:
        type: string
      receiveEmailNotification:
        type: boolean
      receiveSmsNotification:
        type: boolean
      guaranteedSaturdayDelivery:
        type: boolean
      requestSignatureUponDelivery:
        type: boolean
      isLocalCollect:
        type: boolean

  GetPostalDetailsResult:
    type: object
    properties: 
      title:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      companyName:
        type: string
      addressLine1:
        type: string
      addressLine2:
        type: string
      addressLine3:
        type: string
      city:
        type: string
      county:
        type: string
      postcode:
        type: string
      countryCode:
        type: string
        maxLength: 3
      phoneNumber:
        type: string
      emailAddress:
        type: string

  GetTagDetailsResult:
    type: object
    properties:
      key:
        type: string
        maxLength: 100
      value:
        type: string
        maxLength: 100

  GetOrderLineResult:
    required:
        - quantity
    type: object
    properties:
      SKU:
        type: string 
      name:
        type: string
      quantity:
        type: integer
      unitValue:
        type: number
      lineTotal:
        type: number
      customsCode:
        type: string

securityDefinitions:
  Bearer:
    type: 'apiKey'
    description: "Authorization header using the Bearer scheme.\r\n\r\nEnter 'Bearer'
        [space] and then your token in the text input below.\r\n\r\nExample: 'Bearer
        12345abcdef'"
    name: Authorization
    in: 'header'